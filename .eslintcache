[{"C:\\rocketseat\\05-primeiro-projeto-react\\src\\index.tsx":"1","C:\\rocketseat\\05-primeiro-projeto-react\\src\\App.tsx":"2","C:\\rocketseat\\05-primeiro-projeto-react\\src\\routes\\index.tsx":"3","C:\\rocketseat\\05-primeiro-projeto-react\\src\\pages\\Dashboard\\index.tsx":"4","C:\\rocketseat\\05-primeiro-projeto-react\\src\\pages\\Repository\\index.tsx":"5","C:\\rocketseat\\05-primeiro-projeto-react\\src\\pages\\Dashboard\\styles.ts":"6","C:\\rocketseat\\05-primeiro-projeto-react\\src\\styles\\global.ts":"7","C:\\rocketseat\\05-primeiro-projeto-react\\src\\services\\api.ts":"8","C:\\rocketseat\\05-primeiro-projeto-react\\src\\pages\\Repository\\style.ts":"9"},{"size":197,"mtime":1607526126948,"results":"10","hashOfConfig":"11"},{"size":275,"mtime":1608124516285,"results":"12","hashOfConfig":"11"},{"size":400,"mtime":1610374955889,"results":"13","hashOfConfig":"11"},{"size":2708,"mtime":1610320445065,"results":"14","hashOfConfig":"11"},{"size":2919,"mtime":1610549573906,"results":"15","hashOfConfig":"11"},{"size":2000,"mtime":1610318155483,"results":"16","hashOfConfig":"11"},{"size":644,"mtime":1608211747355,"results":"17","hashOfConfig":"11"},{"size":124,"mtime":1608505078230,"results":"18","hashOfConfig":"11"},{"size":2089,"mtime":1610472434137,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"4maw46",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\rocketseat\\05-primeiro-projeto-react\\src\\index.tsx",[],["40","41"],"C:\\rocketseat\\05-primeiro-projeto-react\\src\\App.tsx",[],"C:\\rocketseat\\05-primeiro-projeto-react\\src\\routes\\index.tsx",[],"C:\\rocketseat\\05-primeiro-projeto-react\\src\\pages\\Dashboard\\index.tsx",[],"C:\\rocketseat\\05-primeiro-projeto-react\\src\\pages\\Repository\\index.tsx",["42","43"],"import React, {useEffect, useState} from 'react';\r\n\r\nimport {useRouteMatch, Link} from 'react-router-dom';\r\n\r\nimport { FiChevronLeft, FiChevronRight } from 'react-icons/fi';\r\n\r\nimport { Header, RepositoryInfo, Issues } from './style';\r\n\r\nimport logoImage from '../../assets/Logo.svg';\r\n\r\nimport api from '../../services/api';\r\n\r\n \r\ninterface RepositoryParams{\r\n    repository: string;\r\n}\r\n\r\ninterface Repository{\r\n    full_name: string;\r\n    description: string;\r\n    stargazers_count: number;\r\n    forks_count: number;\r\n    open_issues_count: number;\r\n    owner: {\r\n        login: string;\r\n        avatar_url: string;\r\n    };\r\n}\r\n\r\ninterface Issue{\r\n    id: number;\r\n    title: string;\r\n    html_url: string;\r\n    user: {\r\n        login: string;\r\n    }\r\n}\r\n\r\nconst Repository: React.FC = () => {\r\n\r\n    const [ repository, setRepository] = useState<Repository | null>(null);\r\n    const [ issues, setIssues] = useState<Issue[]>([]);\r\n\r\n\r\n    const { params } = useRouteMatch<RepositoryParams>();\r\n\r\n    useEffect(() => { \r\n        api.get(`repos/${params.repository}`).then(response => {\r\n            setRepository(response.data);\r\n        });\r\n\r\n        api.get(`repos/${params.repository}/issues`).then(response => {\r\n            setIssues(response.data);\r\n        });\r\n    }, [params.repository]);\r\n\r\n    return (\r\n        <>\r\n        <Header>\r\n            <img src={logoImage} alt=\"Github Explorer\" />\r\n            <Link to=\"/\">\r\n                <FiChevronLeft size={16} />\r\n            Voltar\r\n            </Link>\r\n        </Header>\r\n\r\n        {repository && (\r\n            <RepositoryInfo>\r\n            <header>\r\n                <img src={repository.owner.avatar_url} alt={repository.owner.login} />\r\n                <div>\r\n                <strong>{repository.full_name}</strong>\r\n                <p>{repository.description}</p>\r\n                </div>\r\n                </header>\r\n\r\n                <ul>\r\n                    <li>\r\n                        <strong>{repository.stargazers_count}</strong>\r\n                        <span>Stars</span>\r\n                    </li>\r\n                    <li>\r\n                        <strong>{repository.forks_count}</strong>\r\n                         <span>Forks</span>\r\n                    </li>\r\n                    <li>\r\n                        <strong>{repository.open_issues_count}</strong>\r\n                        <span>Issues abertas</span>\r\n                    </li>\r\n                </ul>\r\n            </RepositoryInfo>\r\n        )}\r\n\r\n        <Issues>\r\n            {issues.map( issue  => (\r\n                <a key={issue.id} href={issue.html_url} target=\"_blank\">\r\n                <div>\r\n                <strong>{issue.title}</strong>\r\n\r\n                <p>{issue.user.login}</p>\r\n                </div>\r\n                <FiChevronRight size={20} />\r\n\r\n            </a>\r\n            ))}\r\n        </Issues>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default Repository;","C:\\rocketseat\\05-primeiro-projeto-react\\src\\pages\\Dashboard\\styles.ts",[],"C:\\rocketseat\\05-primeiro-projeto-react\\src\\styles\\global.ts",[],"C:\\rocketseat\\05-primeiro-projeto-react\\src\\services\\api.ts",[],"C:\\rocketseat\\05-primeiro-projeto-react\\src\\pages\\Repository\\style.ts",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":39,"column":7,"nodeType":"50","messageId":"51","endLine":39,"endColumn":27},{"ruleId":"52","severity":1,"message":"53","line":96,"column":57,"nodeType":"54","endLine":96,"endColumn":72},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"@typescript-eslint/no-redeclare","'Repository' is already defined.","Identifier","redeclared","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation"]